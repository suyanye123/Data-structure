/**0. 归并排序
 * 主要思路,分而治之,生成一棵完全二叉树,最后合并相邻有序子序列
 * 归并排序的最好，最坏，平均时间复杂度均为O(nlogn), 归并排序可用于解决逆序对
 */

/**1.数组中的逆序对
 * 在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组，求出这个数组中的逆序对的总数。
 * @param {number[]} nums
 * @return {number}
 */
 var reversePairs = function(nums) {

};